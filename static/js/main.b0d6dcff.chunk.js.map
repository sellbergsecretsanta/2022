{"version":3,"sources":["constants/apiContants.js","components/Header/Header.js","components/LoginForm/LoginForm.js","components/Textarea/Textarea.js","components/Home/Home.js","utils/PrivateRoute.js","components/AlertComponent/AlertComponent.js","components/Wishlist/Wishlist.js","components/ChildWishlist/ChildWishlist.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","ACCESS_TOKEN_NAME","withRouter","props","handleLogout","localStorage","removeItem","history","push","react_default","a","createElement","className","getItem","location","pathname","Fragment","onClick","_useState","useState","username","password","successMessage","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","wishlistUpdated","setWishlistUpdated","useEffect","getUsers","handleChange","e","_e$target","target","id","value","prevState","objectSpread","defineProperty","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","then","response","tempArr","i","length","j","Math","floor","random","_ref2","forEach","p","console","log","secretsanta","data","record","lastUpdated","wishlist","moment","format","name","sort","b","Date","catch","error","stop","apply","this","arguments","redirectToHome","updateTitle","htmlFor","type","aria-describedby","placeholder","onChange","preventDefault","payload","status","user","find","x","trim","toLowerCase","showError","token","setItem","style","display","role","map","index","key","Textarea","wishlistText","setWishlistText","Form","Group","controlId","Label","concat","Control","as","rows","disabled","isSaving","Button","onSaveWishlist","undefined","currentUser","setCurrentUser","secretSanta","setSecretSanta","_useState5","_useState6","setIsSaving","redirectToLogin","getCurrentUser","parseInt","abrupt","sent","updateUserData","updatedUsers","put","saveWishlist","_callee2","text","oldUsers","_context2","_x","handleRandomize","_ref3","_callee3","users","_randomize","successful","_context3","randomize","usersCopy","toConsumableArray","arr1","slice","arr2","user1","pop","user2","shift","partner","handleReset","_ref4","_callee4","_context4","reset","Textarea_Textarea","window","confirm","PrivateRoute","children","rest","objectWithoutProperties","react_router","assign","render","to","from","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-label","aria-hidden","Wishlist","inputValue","setInputValue","child","item","Check","Input","onUpdateWishlistItem","checked","owner","ownerId","textDecoration","title","parents","includes","onMouseOver","onMouseOut","cursor","itemId","onRemoveItem","JSON","stringify","InputGroup","size","variant","onAddItem","describedby","currentUserId","setCurrentUserId","childWishlists","setChildWishlists","getChildWishlists","addItem","childId","oldData","filtered","newId","newItem","updated","filter","max","updateWishlist","_x2","_x3","_x4","Wishlist_Wishlist","toggleItemOwner","App","updateErrorMessage","react_router_dom","basename","Header_Header","path","exact","components_LoginForm_LoginForm","utils_PrivateRoute","Home_Home","ChildWishlist_ChildWishlist","components_AlertComponent_AlertComponent","Boolean","hostname","match","ReactDOM","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2RACaA,EAAe,8BACfC,EAAoB,qBC4ClBC,kBA1Cf,SAAgBC,GAwBZ,SAASC,IACLC,aAAaC,WAAWL,GACxBE,EAAMI,QAAQC,KAAK,KAGvB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MACXP,aAAaQ,QAAQZ,GAAqB,eAAiB,SAEhEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WA5BS,UAA5BT,EAAMW,SAASC,SAEXN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACIP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBK,QAAS,kBAAMd,EAAMI,QAAQC,KAAK,eAA3E,yBACAC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAAS,kBAAMb,MAAlD,aAG2B,cAA5BD,EAAMW,SAASC,SAElBN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACIP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBK,QAAS,kBAAMd,EAAMI,QAAQC,KAAK,WAA3E,gBACAC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAAS,kBAAMb,MAAlD,kBAJL,sFC+IAF,kBA1Jf,SAAmBC,GAAO,IAAAe,EACKC,mBAAS,CAChCC,SAAW,GACXC,SAAW,GACXC,eAAgB,OAJEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACfQ,EADeH,EAAA,GACPI,EADOJ,EAAA,GAAAK,EAOwBT,mBAAS,IAPjCU,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOfE,EAPeD,EAAA,GAOEE,EAPFF,EAAA,GAStBG,oBAAU,WACNC,KAED,IAEH,IAAMC,EAAe,SAACC,GAAM,IAAAC,EACHD,EAAEE,OAAhBC,EADiBF,EACjBE,GAAKC,EADYH,EACZG,MACZZ,EAAS,SAAAa,GAAS,OAAAhB,OAAAiB,EAAA,EAAAjB,CAAA,GACXgB,EADWhB,OAAAkB,EAAA,EAAAlB,CAAA,GAEbc,EAAMC,OA2CTN,EAAQ,eAAAU,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAAC,IAAA,OAAAF,EAAAnC,EAAAsC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbC,IAAMC,IAAIrD,EAAe,oCACpBsD,KAAK,SAAUC,GAGZ,IAFA,IAAIC,EAAU,GAELC,EAAID,EAAQE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAQd,CAACP,EAAQG,GAAIH,EAAQC,IAA/CD,EAAQC,GARgCM,EAAA,GAQ5BP,EAAQG,GARoBI,EAAA,GAW7CP,EAAQQ,QAAQ,SAAAC,GACZC,QAAQC,IAAIF,EAAEG,eAGlBb,EAASc,KAAKC,OAAON,QAAQ,SAAAC,GACrBA,EAAEM,aAA8B,KAAfN,EAAEO,UACnBhB,EAAQhD,KAAK,CAAC+D,YAAaE,IAAOR,EAAEM,aAAaG,OAAO,oBAAqBC,KAAMV,EAAEU,SAI7F5C,EAAmByB,EAAQoB,KAAK,SAAClE,EAAGmE,GAAJ,OAAU,IAAIC,KAAKD,EAAEN,aAAe,IAAIO,KAAKpE,EAAE6D,kBAElFQ,MAAM,SAAUC,GACbd,QAAQC,IAAIa,KA7BP,wBAAA/B,EAAAgC,SAAAlC,MAAH,yBAAAJ,EAAAuC,MAAAC,KAAAC,YAAA,GAiCRC,EAAiB,WACnBlF,EAAMmF,YAAY,QAClBnF,EAAMI,QAAQC,KAAK,UAGvB,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,mBACA9E,EAAAC,EAAAC,cAAA,SAAO6E,KAAK,WACL5E,UAAU,eACV0B,GAAG,WACHmD,mBAAiB,eACjBC,YAAY,wBACZnD,MAAOb,EAAMN,SACbuE,SAAUzD,KAGjBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,eACA9E,EAAAC,EAAAC,cAAA,SAAO6E,KAAK,WACL5E,UAAU,eACV0B,GAAG,WACHoD,YAAY,cACZnD,MAAOb,EAAML,SACbsE,SAAUzD,KAGjBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEfH,EAAAC,EAAAC,cAAA,UACI6E,KAAK,SACL5E,UAAU,oBACVK,QA3GM,SAACkB,GACvBA,EAAEyD,iBACF,IAAMC,EAAQ,CACVzE,SAAWM,EAAMN,SACjBC,SAAWK,EAAML,UAGrB+B,IAAMC,IAAIrD,EAAe,6BACpBsD,KAAK,SAAUC,GAEZ,GADAW,QAAQC,IAAIZ,GACW,MAApBA,EAASuC,OAAe,CACvB,IAAIC,EAAOxC,EAASc,KAAKC,OAAO0B,KAAK,SAAAC,GAAC,OAAIA,EAAE7E,WAAayE,EAAQzE,SAAS8E,OAAOC,gBAEjF,GAAKJ,EAGA,GAAIA,GAAQA,EAAK1E,WAAawE,EAAQxE,SACvClB,EAAMiG,UAAU,0CAEf,CACDzE,EAAS,SAAAa,GAAS,OAAAhB,OAAAiB,EAAA,EAAAjB,CAAA,GACXgB,EADW,CAEdlB,eAAmB,mDAEvB,IAAI+E,EAAQN,EAAKzD,GACjBjC,aAAaiG,QAAQrG,EAAkBoG,GACvChB,IACAlF,EAAMiG,UAAU,WAbhBjG,EAAMiG,UAAU,iCAiBpBjG,EAAMiG,UAAU,0BAGvBrB,MAAM,SAAUC,GACbd,QAAQC,IAAIa,OAqER,aAQJvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B2F,MAAO,CAACC,QAAS9E,EAAMJ,eAAiB,QAAU,QAAUmF,KAAK,SACtG/E,EAAMJ,iBAGdQ,EAAgB4B,OAAS,GACtBjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACbkB,EAAgB4B,OAAS,GAAK5B,EAAgB4E,IAAI,SAACzC,EAAG0C,GAAJ,OAC/ClG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMgG,IAAKD,GACtBlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASqD,EAAEU,MAC1BlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASqD,EAAEM,4CC1HvCsC,MA3Bf,SAAkB1G,GAAO,IAAAe,EACmBC,mBAAShB,EAAM2G,aAAe3G,EAAM2G,aAAe,IADtEvF,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACd4F,EADcvF,EAAA,GACAwF,EADAxF,EAAA,GAGrB,OACId,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACEvG,EAAAC,EAAAC,cAACqG,EAAA,EAAKC,MAAN,CAAYrG,UAAU,OAAOsG,UAAU,gCACrCzG,EAAAC,EAAAC,cAACqG,EAAA,EAAKG,MAAN,KAAahH,EAAMwE,KAAN,GAAAyC,OAAgBjH,EAAMwE,KAAtB,mBAA2C,qBACxDlE,EAAAC,EAAAC,cAACqG,EAAA,EAAKK,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAAGhF,MAAOuE,EAAcnB,SAAU,SAACxD,GAAD,OAAO4E,EAAgB5E,EAAEE,OAAOE,QAAQiF,SAAUrH,EAAMqH,aAE5HrH,EAAMqH,WACJrH,EAAMsH,SACFhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B2F,MAAO,CAACC,QAASrG,EAAMsH,SAAW,QAAU,QAAUhB,KAAK,SAArG,aAIAhG,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CACI9G,UAAU,gBACV4E,KAAK,SACLvE,QAASd,EAAMwH,eAAiB,kBAAMxH,EAAMwH,eAAeb,SAAgBc,GAH/E,YC4KH1H,kBAxLf,SAAcC,GAAO,IAAAe,EACsBC,wBAASyG,GAD/BrG,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACV2G,EADUtG,EAAA,GACIuG,EADJvG,EAAA,GAAAK,EAEsBT,wBAASyG,GAF/B/F,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEVmG,EAFUlG,EAAA,GAEImG,EAFJnG,EAAA,GAAAoG,EAGe9G,oBAAS,GAHxB+G,EAAA1G,OAAAC,EAAA,EAAAD,CAAAyG,EAAA,GAGVR,EAHUS,EAAA,GAGAC,EAHAD,EAAA,GAUjB,SAASE,IACLjI,EAAMI,QAAQC,KAAK,KANvBwB,oBAAU,WACNqG,KAED,IAMH,IAAMA,EAAiB,WACnBjF,IAAMC,IAAIrD,EAAe,oCACpBsD,KAAK,SAAUC,GACW,MAApBA,EAASuC,QACRsC,IAGJ,IAAIrC,EAAOxC,EAASc,KAAKC,OAAO0B,KAAK,SAAAC,GAAC,OAAIA,EAAE3D,KAAOgG,SAASjI,aAAaQ,QAAQZ,MAE7E8F,GAQA+B,EAAe/B,QAEU6B,IAArB7B,EAAK3B,aAAkD,OAArB2B,EAAK3B,aACvC4D,EAAezE,EAASc,KAAKC,OAAO0B,KAAK,SAAAC,GAAC,OAAIA,EAAE3D,KAAOyD,EAAK3B,gBAV5D/D,aAAaQ,QAAQZ,GACrBE,EAAMI,QAAQC,KAAK,aAEnB4H,MAWXrD,MAAM,SAAUC,GACboD,OAINnG,EAAQ,eAAAU,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAAC,IAAA,OAAAF,EAAAnC,EAAAsC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACAC,IAAMC,IAAIrD,EAAe,oCACjCsD,KAAK,SAAUC,GACZ,OAAOA,EAASc,KAAKC,SAExBS,MAAM,SAAUC,GACbd,QAAQC,IAAIa,KANP,cAAA/B,EAAAsF,OAAA,SAAAtF,EAAAuF,MAAA,wBAAAvF,EAAAgC,SAAAlC,MAAH,yBAAAJ,EAAAuC,MAAAC,KAAAC,YAAA,GAURqD,EAAiB,SAACC,GACpBtF,IAAMuF,IAAI3I,EAAe,6BAA8B0I,GAClDpF,KAAK,SAAUC,GACZ4E,GAAY,GACZE,MAEHtD,MAAM,SAAUC,GACbmD,GAAY,MAIlBS,EAAY,eAAA7E,EAAAvC,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAA+F,EAAOC,GAAP,IAAAC,EAAAL,EAAA,OAAA7F,EAAAnC,EAAAsC,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cACjBgF,GAAY,GADKa,EAAA7F,KAAA,EAEMlB,IAFN,OAEX8G,EAFWC,EAAAR,KAGXE,EAAeK,EAASrC,IAAI,SAAAzC,GAAC,OAC/BA,EAAE3B,KAAOgG,SAASjI,aAAaQ,QAAQZ,IAAvCuB,OAAAiB,EAAA,EAAAjB,CAAA,GACQyC,EADR,CACWO,SAAUsE,EAAMvE,YAAa,IAAIO,OAC1Cb,IAGNwE,EAAeC,GATE,wBAAAM,EAAA/D,SAAA4D,MAAH,gBAAAI,GAAA,OAAAlF,EAAAmB,MAAAC,KAAAC,YAAA,GAYZ8D,EAAe,eAAAC,EAAA3H,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAAsG,IAAA,IAAAC,EAAAC,EAAAC,EAAAb,EAAA,OAAA7F,EAAAnC,EAAAsC,KAAA,SAAAwG,GAAA,cAAAA,EAAAtG,KAAAsG,EAAArG,MAAA,cACpBgF,GAAY,GADQqB,EAAArG,KAAA,EAEAlB,IAFA,OAEdoH,EAFcG,EAAAhB,KAAA,UAAAc,EAKiBG,EAAUJ,GAAtCE,EALWD,EAKXC,WAAYb,EALDY,EAKCZ,cAEba,EAPY,CAAAC,EAAArG,KAAA,eAQZsF,EAAeC,GARHc,EAAAjB,OAAA,mBAAAiB,EAAArG,KAAA,iCAAAqG,EAAAvE,SAAAmE,MAAH,yBAAAD,EAAAjE,MAAAC,KAAAC,YAAA,GAcfqE,EAAY,SAACJ,GACf,IAAIK,EAASlI,OAAAmI,EAAA,EAAAnI,CAAO6H,GAEhBO,EAAOF,EAAUG,QACjBC,EAAOJ,EAAUG,QAKrB,IAHAD,EAAKhF,KAAK,WAAa,MAAO,GAAMhB,KAAKE,WACzCgG,EAAKlF,KAAK,WAAa,MAAO,GAAMhB,KAAKE,WAElC8F,EAAKlG,QAAQ,CAChB,IAAIqG,EAAQH,EAAKI,MACbC,EAAQH,EAAK,KAAOC,EAAQD,EAAKE,MAAQF,EAAKI,QAElD,GAAIH,EAAMI,UAAYF,EAAME,QACxB,MAAO,CAACZ,YAAY,EAAOb,aAAcW,GAG7CA,EAAQA,EAAM3C,IAAI,SAAAzC,GAAC,OACfA,EAAE3B,KAAOyH,EAAMzH,GAAfd,OAAAiB,EAAA,EAAAjB,CAAA,GACQyC,EADR,CACWG,YAAa6F,EAAM3H,KAC5B2B,IAIV,MAAO,CAACsF,YAAY,EAAMb,aAAcW,IAGtCe,EAAW,eAAAC,EAAA7I,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAAwH,IAAA,IAAAjB,EAAAX,EAAA,OAAA7F,EAAAnC,EAAAsC,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,cAChBgF,GAAY,GADIoC,EAAApH,KAAA,EAGIlB,IAHJ,OAGVoH,EAHUkB,EAAA/B,KAIZE,EAAe8B,EAAMnB,GAEzBZ,EAAeC,GANC,wBAAA6B,EAAAtF,SAAAqF,MAAH,yBAAAD,EAAAnF,MAAAC,KAAAC,YAAA,GASXoF,EAAQ,SAACnB,GAKX,OAJAA,EAAQA,EAAM3C,IAAI,SAAAzC,GAAC,OAAAzC,OAAAiB,EAAA,EAAAjB,CAAA,GACZyC,EADY,CACTG,YAAa,UAM3B,OACI3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACViH,GACGpH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACIP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,4BAA0CH,EAAAC,EAAAC,cAAA,WAA1C,6DAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC8J,EAAD,CACI3D,aAAce,EAAYrD,SAC1BmD,eAAgB,SAACmB,GAAD,OAAUF,EAAaE,IACvCrB,SAAUA,OAO7BM,GACGtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC8J,EAAD,CACI9F,KAAMoD,EAAYpD,KAClBmC,aAAciB,EAAYvD,SAC1BgD,UAAQ,MAKvBK,GAA2D,MAA5CxH,aAAaQ,QAAQZ,IACjCQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,oBACVK,QAAS,WAAUyJ,OAAOC,QAAQ,iCAAiCzB,MAFvE,wBAKJzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,iBACVK,QAAS,WAAUyJ,OAAOC,QAAQ,qCAAkCP,MAFxE,kCC5JTQ,MApBf,SAAAjI,GAA6C,IAArBkI,EAAqBlI,EAArBkI,SAAaC,EAAQtJ,OAAAuJ,EAAA,EAAAvJ,CAAAmB,EAAA,cACzC,OACElC,EAAAC,EAAAC,cAACqK,EAAA,EAADxJ,OAAAyJ,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAAnH,GAAA,IAAGjD,EAAHiD,EAAGjD,SAAH,OACNT,aAAaQ,QAAQZ,GACnB4K,EAEApK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACEG,GAAI,CACFpK,SAAU,SACVW,MAAO,CAAE0J,KAAMtK,yBCuBhBuK,MAnCf,SAAwBlL,GAAO,IAAAe,EACWC,mBAAS,QADpBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACpBoK,EADoB/J,EAAA,GACNgK,EADMhK,EAAA,GAKrBiK,EAAa,WACfD,EAAc,QACdpL,EAAMsL,UAAU,OAUpB,OARAzJ,oBAAU,WACoB,OAAvB7B,EAAMuL,aAPTH,EAAc,SAUVC,MAKJ/K,EAAAC,EAAAC,cAAA,OACIC,UAAW,+DACX6F,KAAK,QACLnE,GAAG,aACHiE,MAAO,CAAEC,QAAS8E,IAElB7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,YAAOR,EAAMuL,cACbjL,EAAAC,EAAAC,cAAA,UAAQ6E,KAAK,SAAS5E,UAAU,QAAQ+K,aAAW,QAAQ1K,QAAS,kBAAMuK,MACtE/K,EAAAC,EAAAC,cAAA,QAAMiL,cAAY,QAAlB,oBC+CLC,MAzEf,SAAkB1L,GAAO,IAAAe,EACeC,mBAAS,IADxBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACd4K,EADcvK,EAAA,GACFwK,EADExK,EAAA,GAYrB,OACId,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACEvG,EAAAC,EAAAC,cAACqG,EAAA,EAAKC,MAAN,CAAYrG,UAAU,iBAAiBsG,UAAU,gCAC/CzG,EAAAC,EAAAC,cAAA,UAAKR,EAAM6L,MAAMrH,MACjBlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVT,EAAM6L,MAAMxH,SAASkC,IAAI,SAAAuF,GAAI,OAC1BxL,EAAAC,EAAAC,cAACqG,EAAA,EAAKkF,MAAN,CAAYtF,IAAG,GAAAQ,OAAKjH,EAAM6L,MAAM1J,IAAjB8E,OAAsB6E,EAAK3J,IAAMkD,KAAM,YAClD/E,EAAAC,EAAAC,cAACqG,EAAA,EAAKkF,MAAMC,MAAZ,CACI7J,GAAI2J,EAAK3J,GACTkD,KAAM,WACNG,SAAU,kBAAMxF,EAAMiM,qBAAqBjM,EAAM6L,MAAM1J,GAAI2J,EAAK3J,KAChE+J,QAAwB,OAAfJ,EAAKK,MACd9E,SAAyB,OAAfyE,EAAKK,OAAkBL,EAAKK,QAAUnM,EAAMoM,UAE1D9L,EAAAC,EAAAC,cAACqG,EAAA,EAAKkF,MAAM/E,MAAZ,CACIZ,MAAO,CAACiG,eAAgC,OAAfP,EAAKK,OAAkBL,EAAKK,QAAUnM,EAAMoM,QAAU,eAAiB,QAChGE,MAAuB,OAAfR,EAAKK,OAAkBL,EAAKK,QAAUnM,EAAMoM,QAAU,mCAAkC,GAChGhH,QAAS0G,EAAK3J,IACb2J,EAAKnD,MAET3I,EAAM6L,MAAMU,QAAQC,SAASxM,EAAMoM,UAA2B,OAAfN,EAAKK,OACjD7L,EAAAC,EAAAC,cAAA,KACIC,UAAU,qBACVgM,YAAa,SAACzK,GAAD,OAAOA,EAAEE,OAAOzB,UAAY,oBACzCiM,WAAY,SAAC1K,GAAD,OAAOA,EAAEE,OAAOzB,UAAY,sBACxC2F,MAAO,CAACuG,OAAQ,WAChB7L,QAAS,kBA9BV8L,EA8BkCd,EAAK3J,QA7B9DnC,EAAM6M,aAAa7M,EAAM6L,MAAM1J,GAAIyK,GADb,IAACA,KAgCN5M,EAAMsH,UAAYwF,KAAKC,UAAU/M,EAAMsH,YAAcwF,KAAKC,UAAU,CAAC/M,EAAM6L,MAAM1J,GAAI2J,EAAK3J,MACvF7B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAK5BT,EAAM6L,MAAMU,QAAQC,SAASxM,EAAMoM,UAChC9L,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACIP,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CAAYC,KAAK,MACb3M,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CACI0F,KAAK,KACLC,QAAQ,oBACR/K,GAAE,MAAA8E,OAAQjH,EAAM6L,MAAM1J,IACtBkF,SAAUrH,EAAMsH,SAChBxG,QAAS,kBAlD7Bd,EAAMmN,UAAUnN,EAAM6L,MAAM1J,GAAIwJ,QAChCC,EAAc,MAkDW5L,EAAMsH,WAAatH,EAAM6L,MAAM1J,GAC9B7B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BACb,gBAEVH,EAAAC,EAAAC,cAACqG,EAAA,EAAKK,QAAN,CACI9E,MAAOuJ,EACPnG,SAAU,SAACxD,GAAD,OAAO4J,EAAc5J,EAAEE,OAAOE,QACxCmD,YAAY,GACZ6H,YAAW,MAAAnG,OAAQjH,EAAM6L,MAAM1J,WC0D5CpC,kBAtHf,SAAuBC,GAAO,IAAAe,EACiBC,wBAASyG,GAD1BrG,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACnBsM,EADmBjM,EAAA,GACHkM,EADGlM,EAAA,GAAAK,EAEmBT,mBAAS,IAF5BU,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEnB8L,EAFmB7L,EAAA,GAEF8L,EAFE9L,EAAA,GAAAoG,EAGM9G,oBAAS,GAHf+G,EAAA1G,OAAAC,EAAA,EAAAD,CAAAyG,EAAA,GAGnBR,EAHmBS,EAAA,GAGTC,EAHSD,EAAA,GAK1BlG,oBAAU,WACF3B,aAAaQ,QAAQZ,GACrBwN,EAAiBnF,SAASjI,aAAaQ,QAAQZ,KAUnDE,EAAMI,QAAQC,KAAK,KALnBoN,KAED,IAMH,IAAMA,EAAiB,eAAAjL,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAAC,IAAA,OAAAF,EAAAnC,EAAAsC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTC,IAAMC,IAAIrD,EAAe,oCACjCsD,KAAK,SAAUC,GACZoK,EAAkBpK,EAASc,KAAKC,QAChC6D,GAAY,KAEfpD,MAAM,SAAUC,GACbd,QAAQC,IAAIa,KAPE,cAAA/B,EAAAsF,OAAA,SAAAtF,EAAAuF,MAAA,wBAAAvF,EAAAgC,SAAAlC,MAAH,yBAAAJ,EAAAuC,MAAAC,KAAAC,YAAA,GAWjByI,EAAO,eAAA9J,EAAAvC,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAA+F,EAAOiF,EAAShF,GAAhB,IAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtL,EAAAnC,EAAAsC,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,OACZgF,EAAY2F,GAENC,EAHMvM,OAAAmI,EAAA,EAAAnI,CAGQkM,GACdM,EAAWxM,OAAAmI,EAAA,EAAAnI,CAAIuM,GAASK,OAAO,SAAAnI,GAAC,OAAIA,EAAE3D,KAAOwL,IAC7CG,EAAQrK,KAAKyK,IAALnJ,MAAAtB,KAAIpC,OAAAmI,EAAA,EAAAnI,CAAQwM,EAAS,GAAGxJ,SAASkC,IAAI,SAAAzC,GAAC,OAAIA,EAAE3B,OAEpD4L,EAAU,CACZ5L,GAAM2L,EAAQ,EACdnF,KAAQA,EACRwD,MAAS,MAGP6B,EAAUJ,EAAQrH,IAAI,SAAAzC,GAAC,OACzBA,EAAE3B,KAAOwL,EAATtM,OAAAiB,EAAA,EAAAjB,CAAA,GACQyC,EADR,CACWO,SAAQ,GAAA4C,OAAA5F,OAAAmI,EAAA,EAAAnI,CAAMyC,EAAEO,UAAR,CAAkB0J,MACnCjK,IAGNqK,EAAeH,GAnBH,wBAAAnF,EAAA/D,SAAA4D,MAAH,gBAAAI,EAAAsF,GAAA,OAAAxK,EAAAmB,MAAAC,KAAAC,YAAA,GAsBP9E,EAAU,eAAA6I,EAAA3H,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAnC,EAAAoC,KAAG,SAAAsG,EAAO0E,EAASf,GAAhB,IAAAgB,EAAAI,EAAA,OAAAtL,EAAAnC,EAAAsC,KAAA,SAAAwG,GAAA,cAAAA,EAAAtG,KAAAsG,EAAArG,MAAA,OACfgF,EAAY,CAAC2F,EAASf,IAEhBgB,EAHSvM,OAAAmI,EAAA,EAAAnI,CAGKkM,GACdS,EAAUJ,EAAQrH,IAAI,SAAAzC,GAAC,OACzBA,EAAE3B,KAAOwL,EAATtM,OAAAiB,EAAA,EAAAjB,CAAA,GACQyC,EADR,CACWO,SAAShD,OAAAmI,EAAA,EAAAnI,CAAKyC,EAAEO,SAAS4J,OAAO,SAAAnI,GAAC,OAAIA,EAAE3D,KAAOyK,OACvD9I,IAGNqK,EAAeH,GAVA,wBAAA3E,EAAAvE,SAAAmE,MAAH,gBAAAoF,EAAAC,GAAA,OAAAtF,EAAAjE,MAAAC,KAAAC,YAAA,GA8BVkJ,EAAiB,SAACH,GACpB/K,IAAMuF,IAAI3I,EAAe,6BAA8BmO,GAClD7K,KAAK,SAAUC,GACZqK,MAEH7I,MAAM,SAAUC,GACbmD,GAAY,MAIxB,OACI1H,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACQgH,IAAlB4F,GACG/M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACV8M,GAAmBA,EAAehH,IAAI,SAAAsF,GAAK,OACxCvL,EAAAC,EAAAC,cAAC+N,EAAD,CACI9H,IAAKoF,EAAM1J,GACX0J,MAAOA,EACPO,QAASiB,EACTpB,qBAAsB,SAAC0B,EAASf,GAAV,OAtC9B,SAACe,EAASf,GAC9B5E,EAAY,CAAC2F,EAASf,IAEtB,IACMoB,EADO3M,OAAAmI,EAAA,EAAAnI,CAAOkM,GACIhH,IAAI,SAAAzC,GAAC,OACzBA,EAAE3B,KAAOwL,EAATtM,OAAAiB,EAAA,EAAAjB,CAAA,GACQyC,EADR,CACWO,SAAUhD,OAAAmI,EAAA,EAAAnI,CAAIyC,EAAEO,UAAUkC,IAAI,SAAAT,GAAC,OAClCA,EAAE3D,KAAOyK,EAATvL,OAAAiB,EAAA,EAAAjB,CAAA,GACQyE,EADR,CACWqG,MAAOrG,EAAEqG,QAAUkB,EAAgB,KAAOA,IACnDvH,MAERhC,IAGNqK,EAAeH,GAwBwDQ,CAAgBb,EAASf,IACpEO,UAAW,SAACQ,EAAShF,GAAV,OAAmB+E,EAAQC,EAAShF,IAC/CkE,aAAc,SAACc,EAASf,GAAV,OAAqBzM,EAAWwN,EAASf,IACvDtF,SAAUA,YCtE/BmH,MA7Bf,WAAe,IAAA1N,EACgBC,mBAAS,MADzBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACNuL,EADMlL,EAAA,GACC+D,EADD/D,EAAA,GAAAK,EAE8BT,mBAAS,MAFvCU,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEN8J,EAFM7J,EAAA,GAEQgN,EAFRhN,EAAA,GAGb,OACEpB,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQC,SAAS,SACjBtO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqO,EAAD,CAAQvC,MAAOA,IACbhM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACqK,EAAA,EAAD,KACEvK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAOiE,KAAK,IAAIC,OAAO,GACrBzO,EAAAC,EAAAC,cAACwO,EAAD,CAAW/I,UAAWyI,EAAoBvJ,YAAaA,KAEzD7E,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAOiE,KAAK,UACVxO,EAAAC,EAAAC,cAACwO,EAAD,CAAW/I,UAAWyI,EAAoBvJ,YAAaA,KAEzD7E,EAAAC,EAAAC,cAACyO,EAAD,CAAcH,KAAK,SACjBxO,EAAAC,EAAAC,cAAC0O,EAAD,OAEF5O,EAAAC,EAAAC,cAACyO,EAAD,CAAcH,KAAK,aACjBxO,EAAAC,EAAAC,cAAC2O,EAAD,QAGJ7O,EAAAC,EAAAC,cAAC4O,EAAD,CAAgB7D,aAAcA,EAAcD,UAAWoD,QCxB7CW,QACW,cAA7B9E,OAAO5J,SAAS2O,UAEe,UAA7B/E,OAAO5J,SAAS2O,UAEhB/E,OAAO5J,SAAS2O,SAASC,MACvB,iECXNC,IAASzE,OACPzK,EAAAC,EAAAC,cAACF,EAAAC,EAAMkP,WAAP,KACEnP,EAAAC,EAAAC,cAACkP,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5M,KAAK,SAAA6M,GACJA,EAAaC,eAEdrL,MAAM,SAAAC,GACLd,QAAQc,MAAMA,EAAMqL","file":"static/js/main.b0d6dcff.chunk.js","sourcesContent":["/*export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;*/\r\nexport const API_BASE_URL = 'https://api.jsonbin.io/v3/b';\r\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiContants';\r\n\r\nfunction Header(props) {\r\n/*     const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    } */\r\n\r\n    function renderLogout() {\r\n        if (props.location.pathname === '/home') {\r\n            return(\r\n                <>\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => props.history.push('/wishlist')}>Barnens önskelista</button>\r\n                    <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logga ut</button>\r\n                </>\r\n            )\r\n        } else if (props.location.pathname === '/wishlist'){\r\n            return(\r\n                <>\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => props.history.push('/home')}>Secret Santa</button>\r\n                    <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logga ut</button>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    function handleLogout() {\r\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\r\n        props.history.push('/')\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-dark-blue\">\r\n            <div className=\"row col-12 d-flex text-white\">\r\n                <span className=\"h3\">\r\n                    {localStorage.getItem(ACCESS_TOKEN_NAME) ? \"Secret Santa\" : \"Login\"}\r\n                </span>\r\n                <div className=\"ml-auto\">\r\n                    {renderLogout()}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(Header);","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport './LoginForm.css';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\",\r\n        successMessage: null\r\n    })\r\n\r\n    const [wishlistUpdated, setWishlistUpdated] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        const payload={\r\n            \"username\":state.username,\r\n            \"password\":state.password,\r\n        }\r\n\r\n        axios.get(API_BASE_URL + \"/634b1cf92b3499323bdfd5de\")\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if(response.status === 200){\r\n                    let user = response.data.record.find(x => x.username === payload.username.trim().toLowerCase());\r\n\r\n                    if (!user) {\r\n                        props.showError(\"Username does not exists\");\r\n                    }\r\n                    else if (user && user.password !== payload.password) {\r\n                        props.showError(\"Username and password do not match\");\r\n                    }\r\n                    else {\r\n                        setState(prevState => ({\r\n                            ...prevState,\r\n                            'successMessage' : 'Login successful. Redirecting to home page..'\r\n                        }))\r\n                        let token = user.id;\r\n                        localStorage.setItem(ACCESS_TOKEN_NAME,token);\r\n                        redirectToHome();\r\n                        props.showError(null)\r\n                    }\r\n                }\r\n                else{\r\n                    props.showError(\"Something went wrong\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        axios.get(API_BASE_URL + \"/634b1ec265b57a31e6979cee/latest\")\r\n            .then(function (response) {\r\n                let tempArr = []; // = response.data.record;\r\n\r\n                for (let i = tempArr.length - 1; i > 0; i--) {\r\n                    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\r\n                \r\n                    // swap elements tempArr[i] and tempArr[j]\r\n                    // we use \"destructuring assignment\" syntax to achieve that\r\n                    // you'll find more details about that syntax in later chapters\r\n                    // same can be written as:\r\n                    // let t = tempArr[i]; tempArr[i] = tempArr[j]; tempArr[j] = t\r\n                    [tempArr[i], tempArr[j]] = [tempArr[j], tempArr[i]];\r\n                }\r\n                \r\n                tempArr.forEach(p => {\r\n                    console.log(p.secretsanta);\r\n                });\r\n\r\n                response.data.record.forEach(p => {\r\n                    if (p.lastUpdated && p.wishlist !== \"\") {\r\n                        tempArr.push({lastUpdated: moment(p.lastUpdated).format(\"YYYY-MM-DD kk:mm\"), name: p.name});\r\n                    }\r\n                });\r\n\r\n                setWishlistUpdated(tempArr.sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated)));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const redirectToHome = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card col-md-6 col-sm-12 login-card p-3 mt-2 hv-center\">\r\n                <form>\r\n                    <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputUsername1\">Användarnamn</label>\r\n                    <input type=\"username\"\r\n                           className=\"form-control\"\r\n                           id=\"username\"\r\n                           aria-describedby=\"usernameHelp\"\r\n                           placeholder=\"Skriv användarnamn\"\r\n                           value={state.username}\r\n                           onChange={handleChange}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Lösenord</label>\r\n                    <input type=\"password\"\r\n                           className=\"form-control\"\r\n                           id=\"password\"\r\n                           placeholder=\"Lösenord\"\r\n                           value={state.password}\r\n                           onChange={handleChange}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-dark-blue\"\r\n                        onClick={handleSubmitClick}\r\n                    >\r\n                        Logga in\r\n                    </button>\r\n                </form>\r\n                <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                    {state.successMessage}\r\n                </div>\r\n            </div>\r\n            {wishlistUpdated.length > 0 && (\r\n                <div className=\"card col-md-6 col-sm-12 login-card p-3 mt-2 hv-center\">\r\n                    <p className=\"mt-2\">Senast uppdaterade önskelistor</p>\r\n                    <hr className=\"mt-0\" />\r\n                    {wishlistUpdated.length > 0 && wishlistUpdated.map((p, index) => (\r\n                        <div className=\"row\" key={index}>\r\n                            <div className=\"col-4\">{p.name}</div>\r\n                            <div className=\"col-8\">{p.lastUpdated}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction Textarea(props) {\r\n    const [wishlistText, setWishlistText] = useState(props.wishlistText ? props.wishlistText : \"\");\r\n\r\n    return(\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>{props.name ? `${props.name}s önskelista` : \"Din önskelista\"}</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={4} value={wishlistText} onChange={(e) => setWishlistText(e.target.value)} disabled={props.disabled} />\r\n          </Form.Group>\r\n          {!props.disabled && (\r\n              props.isSaving ? (\r\n                  <div className=\"alert alert-success mt-2\" style={{display: props.isSaving ? 'block' : 'none' }} role=\"alert\">\r\n                      Sparar...\r\n                  </div>\r\n              ) :\r\n                  <Button\r\n                      className=\"btn-dark-blue\"\r\n                      type=\"button\"\r\n                      onClick={props.onSaveWishlist ? () => props.onSaveWishlist(wishlistText) : undefined}\r\n                   >\r\n                      Spara\r\n                  </Button>\r\n          )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Textarea","import React,{ useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport axios from 'axios'\r\nimport Textarea from '../Textarea/Textarea';\r\n\r\nfunction Home(props) {\r\n    const [currentUser , setCurrentUser] = useState(undefined);\r\n    const [secretSanta , setSecretSanta] = useState(undefined);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentUser();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function redirectToLogin() {\r\n        props.history.push('/');\r\n    }\r\n\r\n    const getCurrentUser = () => {\r\n        axios.get(API_BASE_URL + \"/634b1ec265b57a31e6979cee/latest\")\r\n            .then(function (response) {\r\n                if(response.status !== 200){\r\n                    redirectToLogin();\r\n                }\r\n\r\n                let user = response.data.record.find(x => x.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME)));\r\n\r\n                if(!user) {\r\n                    if (localStorage.getItem(ACCESS_TOKEN_NAME)) {\r\n                        props.history.push('/wishlist');\r\n                    } else {\r\n                        redirectToLogin();\r\n                    }\r\n                }\r\n                else {\r\n                    setCurrentUser(user);\r\n\r\n                    if (user.secretsanta !== undefined && user.secretsanta !== null) {\r\n                        setSecretSanta(response.data.record.find(x => x.id === user.secretsanta));\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                redirectToLogin()\r\n            });\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        return await axios.get(API_BASE_URL + \"/634b1ec265b57a31e6979cee/latest\")\r\n            .then(function (response) {\r\n                return response.data.record;\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const updateUserData = (updatedUsers) => {\r\n        axios.put(API_BASE_URL + \"/634b1ec265b57a31e6979cee \", updatedUsers)\r\n            .then(function (response) {\r\n                setIsSaving(false);\r\n                getCurrentUser();\r\n            })\r\n            .catch(function (error) {\r\n                setIsSaving(false);\r\n            });\r\n    }\r\n\r\n    const saveWishlist = async (text) => {\r\n        setIsSaving(true);\r\n        const oldUsers = await getUsers();\r\n        const updatedUsers = oldUsers.map(p =>\r\n            p.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME))\r\n            ?  { ...p, wishlist: text, lastUpdated: new Date()}\r\n            : p\r\n        );\r\n\r\n        updateUserData(updatedUsers);\r\n    }\r\n\r\n    const handleRandomize = async () => {\r\n        setIsSaving(true);\r\n        const users = await getUsers();\r\n\r\n        while (true) {\r\n            let {successful, updatedUsers} = randomize(users);\r\n\r\n            if (successful) {\r\n                updateUserData(updatedUsers);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const randomize = (users) => {\r\n        let usersCopy = [...users];\r\n\r\n        var arr1 = usersCopy.slice(),\r\n            arr2 = usersCopy.slice();\r\n\r\n        arr1.sort(function() { return 0.5 - Math.random();});\r\n        arr2.sort(function() { return 0.5 - Math.random();});\r\n\r\n        while (arr1.length) {\r\n            var user1 = arr1.pop(),\r\n                user2 = arr2[0] === user1 ? arr2.pop() : arr2.shift();\r\n\r\n            if (user1.partner === user2.partner) {\r\n                return {successful: false, updatedUsers: users};\r\n            }\r\n\r\n            users = users.map(p =>\r\n                p.id === user1.id\r\n                ?  { ...p, secretsanta: user2.id }\r\n                : p\r\n            );\r\n        }\r\n\r\n        return {successful: true, updatedUsers: users};\r\n    }\r\n\r\n    const handleReset = async () => {\r\n        setIsSaving(true);\r\n\r\n        const users = await getUsers();\r\n        let updatedUsers = reset(users);\r\n\r\n        updateUserData(updatedUsers);\r\n    }\r\n\r\n    const reset = (users) => {\r\n        users = users.map(p => ({\r\n            ...p, secretsanta: null\r\n        }));\r\n\r\n        return users;\r\n    }\r\n\r\n    return(\r\n        <div className=\"card col-md-6 col-sm-12 mt-4 p-3\">\r\n            {currentUser && (\r\n                <>\r\n                    <p className=\"mt-2\">Frivillig önskelista! <br />\r\n                        Önskar du dig inget speciellt? Skriv \"överraskning\"\r\n                    </p>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Textarea\r\n                                wishlistText={currentUser.wishlist}\r\n                                onSaveWishlist={(text) => saveWishlist(text)}\r\n                                isSaving={isSaving}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {secretSanta && (\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-12\">\r\n                        <Textarea\r\n                            name={secretSanta.name}\r\n                            wishlistText={secretSanta.wishlist}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {currentUser && localStorage.getItem(ACCESS_TOKEN_NAME) === \"0\" && (\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-6\">\r\n                        <button\r\n                            className=\"btn btn-dark-blue\"\r\n                            onClick={() => {if(window.confirm('Vill du slumpa secret santa?')){handleRandomize()};}}>Assign secret santa\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {if(window.confirm('Vill nollställa secret santa?')){handleReset()};}}>Reset secret santa\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../constants/apiContants';\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\r\nimport './AlertComponent.css';\r\nfunction AlertComponent(props) {\r\n    const [modalDisplay, toggleDisplay] = useState('none');\r\n    const openModal = () => {\r\n        toggleDisplay('block');     \r\n    }\r\n    const closeModal = () => {\r\n        toggleDisplay('none'); \r\n        props.hideError(null);\r\n    }\r\n    useEffect(() => {\r\n        if(props.errorMessage !== null) {\r\n            openModal()\r\n        } else {\r\n            closeModal()\r\n        }\r\n    });\r\n    \r\n    return(\r\n        <div \r\n            className={\"col-md-6 col-sm-12 alert alert-danger alert-dismissable mt-4\"}\r\n            role=\"alert\" \r\n            id=\"alertPopUp\"\r\n            style={{ display: modalDisplay }}\r\n        >\r\n            <div className=\"d-flex alertMessage\">\r\n                <span>{props.errorMessage}</span>\r\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default AlertComponent","import React, { useState } from 'react';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap';\r\n\r\nfunction Wishlist(props) {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleAddClick = () => {\r\n        props.onAddItem(props.child.id, inputValue);\r\n        setInputValue(\"\");\r\n    }\r\n\r\n    const handleRemoveClick = (itemId) => {\r\n        props.onRemoveItem(props.child.id, itemId);\r\n    }\r\n\r\n    return(\r\n        <Form>\r\n          <Form.Group className=\"mb-3 card-body\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <h4>{props.child.name}</h4>\r\n            <div className=\"ml-4\">\r\n                {props.child.wishlist.map(item => (\r\n                    <Form.Check key={`${props.child.id}${item.id}`} type={\"checkbox\"}>\r\n                        <Form.Check.Input\r\n                            id={item.id}\r\n                            type={\"checkbox\"}\r\n                            onChange={() => props.onUpdateWishlistItem(props.child.id, item.id)}\r\n                            checked={item.owner !== null}\r\n                            disabled={item.owner !== null && item.owner !== props.ownerId}\r\n                        />\r\n                        <Form.Check.Label\r\n                            style={{textDecoration: (item.owner !== null && item.owner !== props.ownerId ? \"line-through\" : \"none\")}}\r\n                            title={(item.owner !== null && item.owner !== props.ownerId ? \"Någon har redan kryssat denna\" : \"\")}\r\n                            htmlFor={item.id}>\r\n                            {item.text}\r\n                        </Form.Check.Label>\r\n                        {props.child.parents.includes(props.ownerId) && item.owner === null && (\r\n                            <i\r\n                                className=\"fa fa-trash-o pl-2\"\r\n                                onMouseOver={(e) => e.target.className = \"fa fa-trash pl-2\"}\r\n                                onMouseOut={(e) => e.target.className = \"fa fa-trash-o pl-2\"}\r\n                                style={{cursor: \"pointer\"}}\r\n                                onClick={() => handleRemoveClick(item.id)}></i>\r\n                        )}\r\n                        {props.isSaving && JSON.stringify(props.isSaving) === JSON.stringify([props.child.id, item.id]) && (\r\n                            <i className=\"fa fa-spinner fa-spin ml-2\" />\r\n                        )}\r\n                    </Form.Check>\r\n                ))}\r\n            </div>\r\n            {props.child.parents.includes(props.ownerId) && (\r\n                <>\r\n                    <InputGroup size=\"sm\">\r\n                        <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline-secondary\"\r\n                            id={`add${props.child.id}`}\r\n                            disabled={props.isSaving}\r\n                            onClick={() => handleAddClick()}>\r\n                                {props.isSaving === props.child.id\r\n                                ? <i className=\"fa fa-spinner fa-spin\" />\r\n                                : \"Lägg till\"}\r\n                        </Button>\r\n                        <Form.Control\r\n                            value={inputValue}\r\n                            onChange={(e) => setInputValue(e.target.value)}\r\n                            placeholder=\"\"\r\n                            describedby={`add${props.child.id}`}\r\n                        />\r\n                    </InputGroup>\r\n                </>\r\n            )}\r\n          </Form.Group>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Wishlist","import React,{ useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport axios from 'axios'\r\nimport Wishlist from '../Wishlist/Wishlist';\r\n\r\nfunction ChildWishlist(props) {\r\n    const [currentUserId , setCurrentUserId] = useState(undefined);\r\n    const [childWishlists , setChildWishlists] = useState([]);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(ACCESS_TOKEN_NAME)) {\r\n            setCurrentUserId(parseInt(localStorage.getItem(ACCESS_TOKEN_NAME)));\r\n        } else {\r\n            redirectToLogin();\r\n        }\r\n\r\n        getChildWishlists();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function redirectToLogin() {\r\n        props.history.push('/');\r\n    }\r\n\r\n    const getChildWishlists = async () => {\r\n        return await axios.get(API_BASE_URL + \"/636eba4965b57a31e6b4cdc9/latest\")\r\n            .then(function (response) {\r\n                setChildWishlists(response.data.record);\r\n                setIsSaving(false);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const addItem = async (childId, text) => {\r\n        setIsSaving(childId);\r\n\r\n        const oldData = [...childWishlists];\r\n        const filtered = [...oldData].filter(x => x.id === childId);\r\n        const newId = Math.max(...filtered[0].wishlist.map(p => p.id));\r\n\r\n        const newItem = {\r\n            \"id\": newId + 1,\r\n            \"text\": text,\r\n            \"owner\": null\r\n        };\r\n\r\n        const updated = oldData.map(p =>\r\n            p.id === childId\r\n            ?  { ...p, wishlist: [...p.wishlist, newItem]}\r\n            : p\r\n        );\r\n\r\n        updateWishlist(updated);\r\n    }\r\n\r\n    const removeItem = async (childId, itemId) => {\r\n        setIsSaving([childId, itemId]);\r\n\r\n        const oldData = [...childWishlists];\r\n        const updated = oldData.map(p =>\r\n            p.id === childId\r\n            ?  { ...p, wishlist: [...p.wishlist.filter(x => x.id !== itemId)]}\r\n            : p\r\n        );\r\n\r\n        updateWishlist(updated);\r\n    }\r\n\r\n    const toggleItemOwner = (childId, itemId) => {\r\n        setIsSaving([childId, itemId]);\r\n\r\n        const oldData = [...childWishlists];\r\n        const updated = oldData.map(p =>\r\n            p.id === childId\r\n            ?  { ...p, wishlist: [...p.wishlist].map(x =>\r\n                    x.id === itemId\r\n                    ?  { ...x, owner: x.owner === currentUserId ? null : currentUserId}\r\n                    : x)\r\n                }\r\n            : p\r\n        );\r\n\r\n        updateWishlist(updated);\r\n    }\r\n\r\n    const updateWishlist = (updated) => {\r\n        axios.put(API_BASE_URL + \"/636eba4965b57a31e6b4cdc9 \", updated)\r\n            .then(function (response) {\r\n                getChildWishlists();\r\n            })\r\n            .catch(function (error) {\r\n                setIsSaving(false);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card col-md-6 col-sm-12 mt-4 p-3\">\r\n                {currentUserId !== undefined && (\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {childWishlists &&  childWishlists.map(child =>\r\n                                <Wishlist\r\n                                    key={child.id}\r\n                                    child={child}\r\n                                    ownerId={currentUserId}\r\n                                    onUpdateWishlistItem={(childId, itemId) => toggleItemOwner(childId, itemId)}\r\n                                    onAddItem={(childId, text) => addItem(childId, text)}\r\n                                    onRemoveItem={(childId, itemId) => removeItem(childId, itemId)}\r\n                                    isSaving={isSaving}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChildWishlist);","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport LoginForm from './components/LoginForm/LoginForm';\r\nimport Home from './components/Home/Home';\r\nimport PrivateRoute from './utils/PrivateRoute';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport AlertComponent from './components/AlertComponent/AlertComponent';\r\nimport ChildWishlist from './components/ChildWishlist/ChildWishlist';\r\n\r\nfunction App() {\r\n  const [title, updateTitle] = useState(null);\r\n  const [errorMessage, updateErrorMessage] = useState(null);\r\n  return (\r\n    <Router basename=\"/2022\">\r\n    <div className=\"App\">\r\n      <Header title={title}/>\r\n        <div className=\"container flex-column\">\r\n          <Switch>\r\n            <Route path=\"/\" exact={true}>\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <PrivateRoute path=\"/home\">\r\n              <Home/>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/wishlist\">\r\n              <ChildWishlist/>\r\n            </PrivateRoute>\r\n          </Switch>\r\n          <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\r\n        </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}